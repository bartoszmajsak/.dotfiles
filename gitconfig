[user]
	name = bartoszmajsak
	email = bartosz.majsak@gmail.com
	signingkey = 76A12675F652DA1C
[alias]
	history = log --oneline --graph --decorate --all
	st = status
	co = checkout
	po = !git push --set-upstream origin $(git symbolic-ref --short HEAD)
	lo = log --oneline
	last = diff-tree --no-commit-id --name-only -r HEAD
	anoe = commit -a --amend --no-edit
	db = !git branch -D $1 && git push origin ":$1"
	prev = checkout HEAD^1
    next = "!sh -c 'git log --reverse --pretty=%H $(git branch --show-current) | awk \"/$(git rev-parse HEAD)/{getline;print}\" | xargs git checkout'"
	sq-to = !"`# Squash all commits to the first one on the branch`; \
		f() { \
			readonly local branch=$1; \
			readonly local first_commit=$(git log ${2:-master}..\"$branch\" --oneline | tail -1 | cut -d' ' -f 1); \
			readonly local author=$(git show -s --format='%an <%ae>' \"$first_commit\"); \
			readonly local title=$(git show -s --format='%s' \"$first_commit\"); \
			git reset $(git merge-base ${2:-master} \"$branch\"); \
			git add . && git commit --author=\"$author\" --message=\"$title\"; \
		}; f"
	sq = !git sq-to $(git rev-parse --abbrev-ref HEAD)
	clean-remote = ! git branch -r | awk '{print }' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print }' | xargs git branch -d

[pull]
	rebase = true
[core]
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	pager = delta
	symlinks = true

[interactive]
	diffFilter = delta --color-only --features=interactive

[delta]
	features = side-by-side line-numbers decorations
	whitespace-error-style = 22 reverse

[delta "interactive"]
    keep-plus-minus-markers = false

[delta "decorations"]
    commit-decoration-style = blue ol
    commit-style = raw
    file-style = omit
    hunk-header-decoration-style = blue box
    hunk-header-file-style = red
    hunk-header-line-number-style = "#067a00"
    hunk-header-style = file line-number syntax

[diff "golang"]
	textconv=pygmentize

[commit]
	gpgsign = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
