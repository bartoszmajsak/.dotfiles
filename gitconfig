[user]
	name = Bartosz Majsak
	email = bartosz.majsak@gmail.com
[alias]
	history = log --oneline --graph --decorate --all
	st = status
	co = checkout
	po = !git push --set-upstream origin $(git symbolic-ref --short HEAD)
	lo = log --oneline
	last = diff-tree --no-commit-id --name-only -r HEAD
	pr  = "!`# Checks out PR to its own branch`; \
			f() { \
				git fetch -fu ${2:-$(git remote | grep ^upstream || echo origin)} refs/pull/$1/head:pr/$1 && git checkout pr/$1; \
			}; \
			f"
	pr-clean = "!`# Cleans all PR branchers`; \
			 git for-each-ref refs/heads/pr/* --format='%(refname)' | \
		     while read ref ; do \
		 	branch=${ref#refs/heads/}; \
			git branch -D $branch; \
		     done"
	sq = "!`# Squash all commits to the first one`; \
		f() { \
			branch=$(git rev-parse --abbrev-ref HEAD); \
			first_commit=$(git log master..\"$branch\" --oneline | tail -1 | cut -d' ' -f 1); \
			author=$(git show -s --format='%an <%ae>' \"$first_commit\"); \
			title=$(git show -s --format='%s' \"$first_commit\"); \
			git reset $(git merge-base master \"$branch\"); \
			git add . && git commit --author=\"$author\" --message=\"$title\"; \
		}; f"
[pull]
	rebase = true
[core]
	excludesfile = ~/.gitignore
	attributesfile = /home/bartek/.gitattributes
	pager = diff-so-fancy | less --tabs=4 -RFX

[diff "golang"]
	textconv=pygmentize
[color]
	ui = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = 11
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
